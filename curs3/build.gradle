plugins {
    id("java")
    id("application")
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group = "ubb.scs.map"
version = "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

ext {
    junitVersion = ("5.8.2")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'ubb.scs.map'
    mainClass = 'ubb.scs.map.MainGUI'
}

javafx {
    version = '17.0.2'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.1')
    implementation('com.dlsc.formsfx:formsfx-core:11.5.0') {
        exclude(group: 'org.openjfx')
    }
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
    implementation 'org.openjfx:javafx-controls:19'
    implementation 'org.openjfx:javafx-fxml:19'

    // JUnit Jupiter API pentru testare
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'

    // JUnit Jupiter Engine pentru a rula testele
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    // (opțional) pentru a permite utilizarea JUnit Vintage pentru testele vechi
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.8.2'

    implementation 'org.postgresql:postgresql:42.7.2'
}

tasks.test {
    useJUnitPlatform()
}



dependencies {
    implementation 'org.openjfx:javafx-controls:19'
}

applicationDefaultJvmArgs = [
        '--module-path', 'C:\\Users\\Lenovo\\Downloads\\openjfx-20.0.2_windows-x64_bin-sdk\\javafx-sdk-20.0.2\\lib',  // Calea către folderul 'lib' al JavaFX SDK
        '--add-modules', 'javafx.controls,javafx.fxml',
        '--add-opens', 'javafx.graphics/com.sun.javafx.util=ALL-UNNAMED',  // Permite accesul la clasele interne
        '--add-opens', 'javafx.fxml/com.sun.javafx.fxml=ALL-UNNAMED' // Permite accesul la clasele interne din FXML
]
